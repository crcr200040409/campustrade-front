{"version":3,"file":"messages.js","sources":["pages/messages/messages.vue","../../../../../../ProgramFiles/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvbWVzc2FnZXMvbWVzc2FnZXMudnVl"],"sourcesContent":["<template>\n  <view class=\"container\">\n    <uni-list :border=\"true\">\n      <uni-list-chat\n          v-for=\"user in userList\"\n          :key=\"user.openId\"\n          :title=\"user.userName || user.openId\"\n          :avatar=\"user.avatar || defaultAvatar\"\n          :note=\"user.lastMessage || '点击开始聊天'\"\n          :time=\"formatTime(user.lastTime)\"\n          :badge-text=\"user.unreadCount || ''\"\n          @click=\"goToChatDetail(user.openId)\"\n          link\n      ></uni-list-chat>\n    </uni-list>\n\n    <view v-if=\"userList.length === 0\" class=\"empty\">\n      暂无会话\n    </view>\n  </view>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport request from '@/api/request' // 请确认路径正确\n\nconst userList = ref([])\nconst defaultAvatar = 'https://qiniu-web-assets.dcloud.net.cn/unidoc/zh/unicloudlogo.png'\n\nonMounted(() => {\n  loadConversationList()\n})\n\nconst loadConversationList = async () => {\n  const userInfo = uni.getStorageSync('userInfo')\n  if (!userInfo || !userInfo.openId) return\n\n  try {\n    const res = await request({\n      url: `/user/listMessageList/?openId=${userInfo.openId}`,\n      method: 'POST'\n    })\n    console.log(\"resInfo----------->\", JSON.stringify(res, null, 2));\n    if (res.code === 200 && Array.isArray(res.data)) {\n      userList.value = res.data.map(openId => ({\n        openId,\n        userName: '用户' + openId.slice(-4), // 可拓展昵称接口\n        lastMessage: '您收到一条新的消息',\n        lastTime: new Date(), // 需替换为接口返回时间（你现在接口没提供）\n        unreadCount: 0, // 这里先写死，真实项目应统计未读数\n        avatar: defaultAvatar\n      }))\n    }\n  } catch (err) {\n    console.error('加载消息列表失败', err)\n  }\n}\n\nconst goToChatDetail = (openId) => {\n  uni.navigateTo({\n    url: `/pages/chatdetail/chatdetail?sellerId=${openId}`,\n    fail: (err) => {\n      console.error('跳转失败:', err)\n    }\n  })\n}\n\nconst formatTime = (time) => {\n  const d = new Date(time)\n  return d.toLocaleTimeString('zh', { hour: '2-digit', minute: '2-digit' })\n}\n</script>\n\n<style scoped>\n.container {\n  padding: 10rpx;\n}\n.empty {\n  text-align: center;\n  color: #999;\n  margin-top: 100rpx;\n}\n</style>\n","import MiniProgramPage from 'D:/作业/软件工程/课程设计/campustrade/code/campustrade-front/pages/messages/messages.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","onMounted","uni","request"],"mappings":";;;;;;;;;;;;;AA2BA,MAAM,gBAAgB;;;;AADtB,UAAM,WAAWA,cAAG,IAAC,EAAE;AAGvBC,kBAAAA,UAAU,MAAM;AACd,2BAAsB;AAAA,IACxB,CAAC;AAED,UAAM,uBAAuB,YAAY;AACvC,YAAM,WAAWC,cAAAA,MAAI,eAAe,UAAU;AAC9C,UAAI,CAAC,YAAY,CAAC,SAAS;AAAQ;AAEnC,UAAI;AACF,cAAM,MAAM,MAAMC,oBAAQ;AAAA,UACxB,KAAK,iCAAiC,SAAS,MAAM;AAAA,UACrD,QAAQ;AAAA,QACd,CAAK;AACDD,sBAAAA,MAAY,MAAA,OAAA,qCAAA,uBAAuB,KAAK,UAAU,KAAK,MAAM,CAAC,CAAC;AAC/D,YAAI,IAAI,SAAS,OAAO,MAAM,QAAQ,IAAI,IAAI,GAAG;AAC/C,mBAAS,QAAQ,IAAI,KAAK,IAAI,aAAW;AAAA,YACvC;AAAA,YACA,UAAU,OAAO,OAAO,MAAM,EAAE;AAAA;AAAA,YAChC,aAAa;AAAA,YACb,UAAU,oBAAI,KAAM;AAAA;AAAA,YACpB,aAAa;AAAA;AAAA,YACb,QAAQ;AAAA,UAChB,EAAQ;AAAA,QACH;AAAA,MACF,SAAQ,KAAK;AACZA,sBAAAA,0DAAc,YAAY,GAAG;AAAA,MAC9B;AAAA,IACH;AAEA,UAAM,iBAAiB,CAAC,WAAW;AACjCA,oBAAAA,MAAI,WAAW;AAAA,QACb,KAAK,yCAAyC,MAAM;AAAA,QACpD,MAAM,CAAC,QAAQ;AACbA,wBAAAA,MAAA,MAAA,SAAA,qCAAc,SAAS,GAAG;AAAA,QAC3B;AAAA,MACL,CAAG;AAAA,IACH;AAEA,UAAM,aAAa,CAAC,SAAS;AAC3B,YAAM,IAAI,IAAI,KAAK,IAAI;AACvB,aAAO,EAAE,mBAAmB,MAAM,EAAE,MAAM,WAAW,QAAQ,WAAW;AAAA,IAC1E;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrEA,GAAG,WAAW,eAAe;"}