{"version":3,"file":"test.js","sources":["pages/test/test.vue","../../../../../../ProgramFiles/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvdGVzdC90ZXN0LnZ1ZQ"],"sourcesContent":["<template>\n  <view>\n    <button @click=\"testApi1\">Test API</button>\n    <text>{{ response }}</text>\n  </view>\n  <view>\n    <button @click=\"testApi\">测试获取 code</button>\n    <text>获取的 code：{{ code }}</text>\n    <text>获取的 sessionId：{{ sessionId }}</text>\n  </view>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport request from '../../api/request'; // 引入封装的请求函数\n\n// 响应数据\nconst response = ref('');\nconst code = ref('');\nconst sessionId = ref('');\nconst testApi1 = ()=>{\n  request({\n    url: '/user/test', // 后端接口地址\n    method: 'GET',\n  }).then((data) => {\n      // 请求成功后更新响应数据\n      response.value = data;\n    })\n    .catch((error) => {\n      // 处理请求错误\n      response.value = '请求失败：' + error;\n    });\n}\n// 测试API函数\nconst testApi = () => {\n  wx.login({\n    async success(res) {\n      if (res.code) {\n        console.log(\"code          \"+res.code);\n        //发起网络请求\n        wx.request({\n          url: 'https://example.com/onLogin',\n          data: {\n            code: res.code\n          }\n        })\n        const sessionId = await request({\n          url: `/user/sessionId/${res.code}`, // 把code拼接到路径中\n          method: \"GET\"\n        });\n        if(sessionId){\n          // 微信授权\n          wx.getUserInfo({\n            success: async function (res) {\n              const encryptedData=res.encryptedData\n              const iv=res.iv\n              const loginRes = await request({\n                url: \"/user/login\",\n                method: \"POST\",\n                data: {\n                  encryptedData,\n                  iv,\n                  sessionId\n                }\n              });\n              if(loginRes.code) {\n                console.error(\"ans---------------\")\n                console.log(loginRes);\n              }\n            }\n          })\n        }\n      } else {\n        console.log('登录失败！' + res.errMsg)\n      }\n    }\n  })\n};\n\n</script>\n\n<style scoped>\n/* 样式部分，根据需要自行调整 */\nbutton {\n  margin: 20px;\n  padding: 10px;\n  background-color: #007AFF;\n  color: white;\n  border-radius: 5px;\n  font-size: 16px;\n}\n\ntext {\n  display: block;\n  margin-top: 20px;\n  font-size: 16px;\n  color: #333;\n}\n</style>\n","import MiniProgramPage from 'D:/作业/软件工程/课程设计/campustrade/code/campustrade-front/pages/test/test.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","request","wx","uni","sessionId","res"],"mappings":";;;;;;AAiBA,UAAM,WAAWA,cAAAA,IAAI,EAAE;AACvB,UAAM,OAAOA,cAAAA,IAAI,EAAE;AACnB,UAAM,YAAYA,cAAAA,IAAI,EAAE;AACxB,UAAM,WAAW,MAAI;AACnBC,0BAAQ;AAAA,QACN,KAAK;AAAA;AAAA,QACL,QAAQ;AAAA,MACZ,CAAG,EAAE,KAAK,CAAC,SAAS;AAEd,iBAAS,QAAQ;AAAA,MACvB,CAAK,EACA,MAAM,CAAC,UAAU;AAEhB,iBAAS,QAAQ,UAAU;AAAA,MACjC,CAAK;AAAA,IACL;AAEA,UAAM,UAAU,MAAM;AACpBC,oBAAAA,KAAG,MAAM;AAAA,QACP,MAAM,QAAQ,KAAK;AACjB,cAAI,IAAI,MAAM;AACZC,0BAAY,MAAA,MAAA,OAAA,6BAAA,mBAAiB,IAAI,IAAI;AAErCD,0BAAAA,KAAG,QAAQ;AAAA,cACT,KAAK;AAAA,cACL,MAAM;AAAA,gBACJ,MAAM,IAAI;AAAA,cACX;AAAA,YACX,CAAS;AACD,kBAAME,aAAY,MAAMH,oBAAQ;AAAA,cAC9B,KAAK,mBAAmB,IAAI,IAAI;AAAA;AAAA,cAChC,QAAQ;AAAA,YAClB,CAAS;AACD,gBAAGG,YAAU;AAEXF,4BAAAA,KAAG,YAAY;AAAA,gBACb,SAAS,eAAgBG,MAAK;AAC5B,wBAAM,gBAAcA,KAAI;AACxB,wBAAM,KAAGA,KAAI;AACb,wBAAM,WAAW,MAAMJ,oBAAQ;AAAA,oBAC7B,KAAK;AAAA,oBACL,QAAQ;AAAA,oBACR,MAAM;AAAA,sBACJ;AAAA,sBACA;AAAA,sBACA,WAAAG;AAAA,oBACD;AAAA,kBACjB,CAAe;AACD,sBAAG,SAAS,MAAM;AAChBD,kCAAAA,kDAAc,oBAAoB;AAClCA,kCAAAA,MAAY,MAAA,OAAA,6BAAA,QAAQ;AAAA,kBACrB;AAAA,gBACF;AAAA,cACb,CAAW;AAAA,YACF;AAAA,UACT,OAAa;AACLA,0BAAA,MAAA,MAAA,OAAA,6BAAY,UAAU,IAAI,MAAM;AAAA,UACjC;AAAA,QACF;AAAA,MACL,CAAG;AAAA,IACH;;;;;;;;;;;;;AC5EA,GAAG,WAAW,eAAe;"}