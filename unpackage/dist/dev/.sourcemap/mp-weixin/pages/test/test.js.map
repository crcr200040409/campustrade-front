{"version":3,"file":"test.js","sources":["pages/test/test.vue","../../../../../../ProgramFiles/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvdGVzdC90ZXN0LnZ1ZQ"],"sourcesContent":["<template>\n  <view>\n    <button @click=\"testApi1\">Test API</button>\n    <text>{{ response }}</text>\n  </view>\n  <view>\n    <button @click=\"testApi\">测试获取 code</button>\n    <text>获取的 code：{{ code }}</text>\n    <text>获取的 sessionId：{{ sessionId }}</text>\n  </view>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport request from '../../api/request'; // 引入封装的请求函数\n\n// 响应数据\nconst response = ref('');\nconst code = ref('');\nconst sessionId = ref('');\nconst testApi1 = ()=>{\n  request({\n    url: '/user/test', // 后端接口地址\n    method: 'GET',\n  }).then((data) => {\n      // 请求成功后更新响应数据\n      response.value = data;\n    })\n    .catch((error) => {\n      // 处理请求错误\n      response.value = '请求失败：' + error;\n    });\n}\n// 测试API函数\nconst testApi = () => {\n  wx.login({\n    success: async (res) => {\n      const userCode = res.code;  // 获取 code\n      if (userCode) {\n        // 显示code\n        code.value = userCode;\n\n        // 发起请求\n        const response = await request({\n          url: '/weixin/sessionId/' + userCode\n        });\n\n        if (response.statusCode === 200) {\n          // 获取返回的 sessionId\n          sessionId.value = response.data.data;\n          wx.showToast({\n            title: '请求成功！',\n            icon: 'success',\n          });\n        } else {\n          wx.showToast({\n            title: '请求失败！',\n            icon: 'error',\n          });\n        }\n      } else {\n        console.log(\"获取用户登录状态失败!\" + res.errMsg);\n      }\n    }\n  });\n  // 使用封装的请求函数发送请求\n  // request({\n  //   url: '/user/test', // 后端接口地址\n  //   method: 'GET',\n  // }).then((data) => {\n  //     // 请求成功后更新响应数据\n  //     response.value = data;\n  //   })\n  //   .catch((error) => {\n  //     // 处理请求错误\n  //     response.value = '请求失败：' + error;\n  //   });\n};\n\n\n\n</script>\n\n<style scoped>\n/* 样式部分，根据需要自行调整 */\nbutton {\n  margin: 20px;\n  padding: 10px;\n  background-color: #007AFF;\n  color: white;\n  border-radius: 5px;\n  font-size: 16px;\n}\n\ntext {\n  display: block;\n  margin-top: 20px;\n  font-size: 16px;\n  color: #333;\n}\n</style>\n","import MiniProgramPage from 'D:/作业/软件工程/课程设计/campustrade/code/campustrade-front/pages/test/test.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","request","wx","response","uni"],"mappings":";;;;;;AAiBA,UAAM,WAAWA,cAAAA,IAAI,EAAE;AACvB,UAAM,OAAOA,cAAAA,IAAI,EAAE;AACnB,UAAM,YAAYA,cAAAA,IAAI,EAAE;AACxB,UAAM,WAAW,MAAI;AACnBC,0BAAQ;AAAA,QACN,KAAK;AAAA;AAAA,QACL,QAAQ;AAAA,MACZ,CAAG,EAAE,KAAK,CAAC,SAAS;AAEd,iBAAS,QAAQ;AAAA,MACvB,CAAK,EACA,MAAM,CAAC,UAAU;AAEhB,iBAAS,QAAQ,UAAU;AAAA,MACjC,CAAK;AAAA,IACL;AAEA,UAAM,UAAU,MAAM;AACpBC,oBAAAA,KAAG,MAAM;AAAA,QACP,SAAS,OAAO,QAAQ;AACtB,gBAAM,WAAW,IAAI;AACrB,cAAI,UAAU;AAEZ,iBAAK,QAAQ;AAGb,kBAAMC,YAAW,MAAMF,oBAAQ;AAAA,cAC7B,KAAK,uBAAuB;AAAA,YACtC,CAAS;AAED,gBAAIE,UAAS,eAAe,KAAK;AAE/B,wBAAU,QAAQA,UAAS,KAAK;AAChCD,4BAAAA,KAAG,UAAU;AAAA,gBACX,OAAO;AAAA,gBACP,MAAM;AAAA,cAClB,CAAW;AAAA,YACX,OAAe;AACLA,4BAAAA,KAAG,UAAU;AAAA,gBACX,OAAO;AAAA,gBACP,MAAM;AAAA,cAClB,CAAW;AAAA,YACF;AAAA,UACT,OAAa;AACLE,0BAAY,MAAA,MAAA,OAAA,6BAAA,gBAAgB,IAAI,MAAM;AAAA,UACvC;AAAA,QACF;AAAA,MACL,CAAG;AAAA,IAaH;;;;;;;;;;;;;AC5EA,GAAG,WAAW,eAAe;"}