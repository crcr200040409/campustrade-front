{"version":3,"file":"chatdetail.js","sources":["pages/chatdetail/chatdetail.vue","../../../../../../ProgramFiles/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvY2hhdGRldGFpbC9jaGF0ZGV0YWlsLnZ1ZQ"],"sourcesContent":["<template>\n  <view class=\"chat-container\">\n    <!-- 头部 -->\n    <view class=\"chat-header\">\n      <text class=\"user-name\">{{ userName }}</text>\n    </view>\n    <!-- 消息列表 -->\n    <scroll-view\n        class=\"message-list\"\n        scroll-y\n        :scroll-top=\"scrollTop\"\n        :style=\"{ height: scrollHeight + 'px' }\"\n    >\n      <view\n          v-for=\"(message, index) in messages\"\n          :key=\"index\"\n          class=\"message-item\"\n          :class=\"message.sender\"\n      >\n        <view class=\"message-bubble\">\n          <text class=\"message-content\">{{ message.content }}</text>\n          <text class=\"message-time\">{{ message.time }}</text>\n        </view>\n      </view>\n    </scroll-view>\n\n    <!-- 输入区 -->\n    <view class=\"chat-input\">\n      <input\n          v-model=\"newMessage\"\n          type=\"text\"\n          placeholder=\"请输入消息\"\n          :adjust-position=\"false\"\n      @confirm=\"sendMessage\"\n      />\n      <button @click=\"sendMessage\">发送</button>\n    </view>\n  </view>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted, nextTick } from 'vue'\n\n// const openId = uni.getCurrentPages().pop().options.openId\nconst openId =\"1010\"\nconst userName = ref('ruichen')\nconst messages = reactive([\n  {\n    sender: \"me\",\n    content: \"你好，最近怎么样？\",\n    time: \"10:30\"\n  },\n  {\n    sender: \"other\",\n    content: \"很好，谢谢！\",\n    time: \"10:31\"\n  }\n])\n\n// 新增：滚动控制相关变量\nconst scrollTop = ref(0)\nconst scrollHeight = ref(0)\n\n// 修复3：自动计算可滚动高度\nonMounted(() => {\n  const systemInfo = uni.getSystemInfoSync()\n  const query = uni.createSelectorQuery().in(this)\n  query.select('.chat-header').boundingClientRect()\n  query.select('.chat-input').boundingClientRect()\n  query.exec(res => {\n    const headerHeight = res[0].height\n    const inputHeight = res[1].height\n    scrollHeight.value = systemInfo.windowHeight - headerHeight - inputHeight\n  })\n})\n\nconst newMessage = ref('')\nconst sendMessage = async () => {\n  if (!newMessage.value.trim()) return\n  messages.push({\n    sender: \"me\",\n    content: newMessage.value.trim(),\n    time: new Date().toLocaleTimeString('zh', { hour: '2-digit', minute: '2-digit' })\n  })\n\n  newMessage.value = ''\n  await nextTick()\n  scrollTop.value = Date.now()\n}\n\nsetInterval(() => {\n  if (messages.length % 2 === 0) return\n  messages.push({\n    sender: \"other\",\n    content: \"自动回复：\" + new Date().toLocaleTimeString(),\n    time: new Date().toLocaleTimeString('zh', { hour: '2-digit', minute: '2-digit' })\n  })\n  scrollTop.value = Date.now()\n}, 3000)\n</script>\n\n<style lang=\"scss\">\n.chat-container {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background: #f5f5f5;\n}\n\n.chat-header {\n  padding: 15px;\n  background: #fff;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n\n  .user-name {\n    font-size: 18px;\n    font-weight: 600;\n    color: #333;\n  }\n}\n\n.message-list {\n  flex: 1;\n  padding: 15px;\n  box-sizing: border-box;\n}\n\n.message-item {\n  margin-bottom: 15px;\n\n  &.me {\n    display: flex;\n    justify-content: flex-end;\n  }\n\n  &.other {\n    display: flex;\n    justify-content: flex-start;\n  }\n}\n\n.message-bubble {\n  max-width: 70%;\n  padding: 12px 15px;\n  border-radius: 8px;\n  position: relative;\n\n  .me & {\n    background: #1d9bf0;\n    color: white;\n    border-bottom-right-radius: 2px;\n  }\n\n  .other & {\n    background: white;\n    color: #333;\n    border-bottom-left-radius: 2px;\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  }\n}\n\n.message-content {\n  font-size: 16px;\n  line-height: 1.4;\n}\n\n.message-time {\n  display: block;\n  font-size: 12px;\n  color: rgba(255,255,255,0.7);\n  margin-top: 5px;\n  text-align: right;\n\n  .other & {\n    color: #666;\n  }\n}\n\n.chat-input {\n  display: flex;\n  padding: 10px;\n  background: white;\n  border-top: 1px solid #eee;\n\n  input {\n    flex: 1;\n    padding: 10px 15px;\n    border: 1px solid #ddd;\n    border-radius: 20px;\n    margin-right: 10px;\n    font-size: 14px;\n  }\n\n  button {\n    background: #1d9bf0;\n    color: white;\n    border: none;\n    border-radius: 20px;\n    padding: 0 20px;\n    font-size: 14px;\n\n    &:active {\n      opacity: 0.8;\n    }\n  }\n}\n</style>","import MiniProgramPage from 'D:/作业/软件工程/课程设计/campustrade/code/campustrade-front/pages/chatdetail/chatdetail.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","reactive","onMounted","uni","nextTick","MiniProgramPage"],"mappings":";;;;;AA6CA,UAAM,WAAWA,cAAG,IAAC,SAAS;AAC9B,UAAM,WAAWC,cAAAA,SAAS;AAAA,MACxB;AAAA,QACE,QAAQ;AAAA,QACR,SAAS;AAAA,QACT,MAAM;AAAA,MACP;AAAA,MACD;AAAA,QACE,QAAQ;AAAA,QACR,SAAS;AAAA,QACT,MAAM;AAAA,MACP;AAAA,IACH,CAAC;AAGD,UAAM,YAAYD,cAAG,IAAC,CAAC;AACvB,UAAM,eAAeA,cAAG,IAAC,CAAC;AAG1BE,kBAAAA,UAAU,MAAM;AACd,YAAM,aAAaC,cAAG,MAAC,kBAAmB;AAC1C,YAAM,QAAQA,cAAG,MAAC,oBAAmB,EAAG,GAAG,IAAI;AAC/C,YAAM,OAAO,cAAc,EAAE,mBAAoB;AACjD,YAAM,OAAO,aAAa,EAAE,mBAAoB;AAChD,YAAM,KAAK,SAAO;AAChB,cAAM,eAAe,IAAI,CAAC,EAAE;AAC5B,cAAM,cAAc,IAAI,CAAC,EAAE;AAC3B,qBAAa,QAAQ,WAAW,eAAe,eAAe;AAAA,MAClE,CAAG;AAAA,IACH,CAAC;AAED,UAAM,aAAaH,cAAG,IAAC,EAAE;AACzB,UAAM,cAAc,YAAY;AAC9B,UAAI,CAAC,WAAW,MAAM,KAAM;AAAE;AAC9B,eAAS,KAAK;AAAA,QACZ,QAAQ;AAAA,QACR,SAAS,WAAW,MAAM,KAAM;AAAA,QAChC,OAAM,oBAAI,KAAM,GAAC,mBAAmB,MAAM,EAAE,MAAM,WAAW,QAAQ,WAAW;AAAA,MACpF,CAAG;AAED,iBAAW,QAAQ;AACnB,YAAMI,yBAAU;AAChB,gBAAU,QAAQ,KAAK,IAAK;AAAA,IAC9B;AAEA,gBAAY,MAAM;AAChB,UAAI,SAAS,SAAS,MAAM;AAAG;AAC/B,eAAS,KAAK;AAAA,QACZ,QAAQ;AAAA,QACR,SAAS,WAAU,oBAAI,KAAI,GAAG,mBAAoB;AAAA,QAClD,OAAM,oBAAI,KAAM,GAAC,mBAAmB,MAAM,EAAE,MAAM,WAAW,QAAQ,WAAW;AAAA,MACpF,CAAG;AACD,gBAAU,QAAQ,KAAK,IAAK;AAAA,IAC9B,GAAG,GAAI;;;;;;;;;;;;;;;;;;;;;;ACjGP,GAAG,WAAWC,SAAe;"}